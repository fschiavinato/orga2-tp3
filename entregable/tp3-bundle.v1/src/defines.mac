;============
;    GDT
;============
%define GDT_DESC_SIZE                           0x08
%define GDT_IDX_KERNEL_CODE_DESC                0x03*GDT_DESC_SIZE
%define GDT_IDX_KERNEL_DATA_DESC                0x04*GDT_DESC_SIZE
%define GDT_IDX_USER_CODE_DESC                  0x05*GDT_DESC_SIZE
%define GDT_IDX_USER_DATA_DESC                  0x06*GDT_DESC_SIZE
%define GDT_IDX_VIDEO_DESC                      0x07*GDT_DESC_SIZE
%define GDT_IDX_IDLE_TASK                       0x08*GDT_DESC_SIZE
%define ADDR_PAGE_DIR			       		 	0x00027000
%define PAGE_PRESRW                             0x03
%define C_BG_BLACK                              (0x0 << 4)
%define COL_SIZE                                80
%define VIDEO_SCREEN			        		0xB8000

;============
;    TSS
;============
%define TSS_PREVIOUS_TASKLINK_OFFSET           	0
%define TSS_ESP0_OFFSET                        	4
%define TSS_SS0_OFFSET                         	8
%define TSS_ESP1_OFFSET                        	12
%define TSS_SS1_OFFSET                         	16
%define TSS_ESP2_OFFSET                        	20
%define TSS_SS2_OFFSET                         	24
%define TSS_CR3_OFFSET                         	28
%define TSS_EIP_OFFSET                         	32
%define TSS_EFLAGS_OFFSET                      	36
%define TSS_EAX_OFFSET                         	40
%define TSS_ECX_OFFSET                         	44
%define TSS_EDX_OFFSET                         	48
%define TSS_EBX_OFFSET                         	52
%define TSS_ESP_OFFSET                         	56
%define TSS_EBP_OFFSET                         	60
%define TSS_ESI_OFFSET                         	64
%define TSS_EDI_OFFSET                         	68
%define TSS_ES_OFFSET                          	0x48
%define TSS_CS_OFFSET                          	0x4C
%define TSS_SS_OFFSET                          	0x50
%define TSS_DS_OFFSET                          	0x54
%define TSS_FS_OFFSET                          	0x58
%define TSS_GS_OFFSET                          	0x5C


;============
;    MMU
;============
%define PAGE_SIZE                              	0x1000

;============
;    TS
;============
%define TS_SIZE                                	4
%define TS_ESP0_OFFSET                         	0

%define CTX_EFLAGS                             	0x202

%define DIR_TAREA_IDLE                         	0x10000
%define DIR_LOG_CODIGO_TAREA                   	0x8000000
%define DIR_LOG_PILA_TAREA                     	DIR_LOG_CODIGO_TAREA + PAGE_SIZE

extern GDT_DESC
extern gdt_inicializar
extern IDT_DESC
extern idt_inicializar
extern deshabilitar_pic
extern resetear_pic
extern habilitar_pic
extern mmu_inicializar_dir_kernel 
extern mmu_inicializar_dir_tarea 
extern mmu_inicializar 
extern mmu_nueva_pila_kernel 
extern print_int
extern imprimir_pantalla
extern sched_inicializar
extern sched_proxima_tarea
extern sched_tarea_actual
extern tss_sistema
extern ts_tareas

; Si es una tarea la pila tiene que estar como sigue:

; esp0 -> | CR3    |
;         | DS     |
;---------------------------
;         | EDI    |
;         | ESI    |
;         | EBP0   |
;         | ESP0   |
;         | EBX    |    Lo de esta seccion es para el pushad/popad
;         | EDX    |
;         | ECX    |
;         | EAX    |
;----------------------------
;         | EIP    |
;         | CS     |
;         | EFLAGS |
;Si es de usuario necesita lo siguiente:
;         | ESP    |
;         | SS     |


; 1: ts_idx de la tarea actual
; 2: ts_idx de la tarea nueva
; Suponemos que se llama desde una interrupcion y que se hizo un pushad
%macro cambio_contexto 1
    mov eax, ds
    push eax
    mov eax, cr3
    push eax
    mov esp, [ts_tareas + %1*TS_SIZE + TS_ESP0_OFFSET]
    mov [tss_sistema + TSS_ESP0_OFFSET], esp
    pop eax
    mov cr3, eax
    pop eax
    mov ds, eax
    mov es, eax
    mov fs, eax
    mov gs, eax
    popad
    iret
%endmacro    
